openapi: "3.1.0"

info:
  title: Servicio de Merchandising
  description: |-
    Servicio de Undersounds dedicado a la gestión de merchandising de los artistas.
    Este servicio actúa como cliente de Shopify, exponiendo una API REST simplificada.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: https://undersounds.com/api/v1/merch

tags:
  - name: product
    description: Productos físicos en venta.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      required:
        - id
        - publicId
        - name
        - price
        - stock
        - type
        - coverSrc
      properties:
        id:
          type: integer
          format: int64
          description: Identificador interno del producto
          example: 123
        publicId:
          type: string
          format: uuid
          description: Identificador público único del producto
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          description: Nombre del producto
          example: "Camiseta edición limitada"
        price:
          type: number
          format: float
          description: Precio en euros
          example: 19.99
        stock:
          type: integer
          description: Cantidad disponible
          example: 50
        type:
          type: string
          description: Tipo de producto (camiseta, taza, vinilo, cd, poster)
          example: "camiseta"
        coverSrc:
          type: string
          format: uri
          description: URL de la portada o imagen principal del producto
          example: "https://cdn.shopify.com/s/files/1/0000/1111/products/camiseta.png"
        artist:
          type: string
          description: Nombre del artista asociado al producto
          example: "The Undersounds"

    ProductCreateRequest:
      type: object
      required:
        - name
        - price
        - stock
        - type
        - coverSrc
      properties:
        name:
          type: string
          example: "Vinilo edición especial"
        price:
          type: number
          format: float
          example: 24.99
        stock:
          type: integer
          example: 10
        type:
          type: string
          enum: [camiseta, taza, vinilo, cd, poster]
          example: "vinilo"
        coverSrc:
          type: string
          format: uri
          example: "https://cdn.shopify.com/s/files/1/0000/1111/products/vinilo.png"
        artist:
          type: string
          example: "The Undersounds"

    ProductResponse:
      allOf:
        - $ref: "#/components/schemas/Product"

    ProductPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ProductResponse"
        page:
          type: integer
          example: 0
        size:
          type: integer
          example: 20
        totalElements:
          type: integer
          example: 125
        totalPages:
          type: integer
          example: 7

security:
  - bearerAuth: []

paths:
  /products:
    get:
      tags:
        - product
      summary: Listar productos con paginación y filtros
      description: Devuelve una página de productos con soporte de filtros por nombre, artista y rango de precios.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          description: Número de página (empezando en 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
          description: Número de elementos por página
          example: 20
        - in: query
          name: name
          schema:
            type: string
          description: Filtro por nombre de producto (búsqueda parcial)
          example: "camiseta"
        - in: query
          name: artist
          schema:
            type: string
          description: Filtro por artista
          example: "The Undersounds"
        - in: query
          name: minPrice
          schema:
            type: number
            format: float
          description: Precio mínimo
          example: 10.0
        - in: query
          name: maxPrice
          schema:
            type: number
            format: float
          description: Precio máximo
          example: 50.0
      responses:
        "200":
          description: Página de productos filtrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPage"

    post:
      tags:
        - product
      summary: Crear un nuevo producto
      description: Crea un nuevo producto en la tienda y lo sincroniza con Shopify.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreateRequest"
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"

  /products/{id}:
    get:
      tags:
        - product
      summary: Obtener un producto por ID
      description: Devuelve la información de un producto específico.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "404":
          description: Producto no encontrado

    put:
      tags:
        - product
      summary: Actualizar un producto
      description: Actualiza un producto existente en la tienda y en Shopify.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreateRequest"
      responses:
        "200":
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "404":
          description: Producto no encontrado

    delete:
      tags:
        - product
      summary: Eliminar un producto
      description: Elimina un producto de la tienda y de Shopify.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Producto eliminado correctamente
        "404":
          description: Producto no encontrado
